/*eslint-env node*/

var express = require('express');
var http = require('http');
var app = express();
var request = require('request');
var bodyParser = require('body-parser');

// parse application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({ extended: false }));

// parse application/json
app.use(bodyParser.json());

// static resource
app.use(express.static(__dirname + '/assets'));

app.get('/*', function(req, res){
    gateway(req, res, "GET");
});

app.put('/*', function(req, res){
	gateway(req, res, "PUT");
});

app.post('/*', function(req, res){
	gateway(req, res, "POST");
});

app.delete('/*', function(req, res){
	gateway(req, res, "DELETE");
});

app.options('/*', function(req, res){
    
    requestLog(req, res, 'OPTIONS');
    
    // http://mohwaproject.tistory.com/entry/Ajax-%EC%A0%84%EC%86%A1-%EA%B5%AC%EB%B6%84%ED%95%98%EA%B8%B0
    // CORS 요청시 custom header+POST가 들어가면 1차적으로 OPTIONS로 호출해서 아래 2개를 체크하고, 다시 요청을 날리게 된다.
    
    var host = req.get('host');
    var domainBlog = 'blog.devpage.net'; //현재는 blog만 options를 날림
    if(host!= domainBlog){
        res.send(401, 'Unauthorized');    
    }else{
        // Add headers
    	res.setHeader('Access-Control-Allow-Origin', '*');
    	res.setHeader('Access-Control-Allow-Headers', 'content-type, x-auth');
    	res.send(200);
    }
    
});

function requestLog(req, res, httpMethod){
	console.log( "-------------------" );
	console.log( httpMethod );
	console.log( "req.get('X-Forwarded-Protocol')=" + req.get('X-Forwarded-Protocol') );
	console.log( "req.get('Access-Control-Request-Method')=" + req.get('Access-Control-Request-Method') );
	console.log( "req.get('host')=" + req.get('host') );
	console.log( "req.originalUrl=" + req.originalUrl );
	console.log( "req.url=" + req.url );
	console.log( "req.protocol=" + req.protocol );
	console.log( "req.get('X-Auth')=" + req.get('X-Auth') );
	console.log( "req.get('content-type')=" + req.get('content-type') );
	console.log( "-------------------" );    
}

function gateway(req, res, httpMethod){
	try{
	    requestLog(req, res, httpMethod);
	    
		var host = req.get('host');
		var domainMain = 'devpage.net';
		var domainBlog = 'blog.devpage.net';
		var domainAuth = 'auth.devpage.net';

		if(host == domainMain){
			res.redirect('/work_in_progress/work_in_progress.html');

		}else if(host == domainBlog){
		    var options = {
				host: '127.0.0.1',
				port: '7030',
				path: req.url
			};
			
			internalRequest(req, res, httpMethod, options);

		}else if(host == domainAuth){
			var options = {
				host: '127.0.0.1',
				port: '7010',
				path: req.url
			};
			
			// Add headers
			res.setHeader('Access-Control-Allow-Origin', '*');
			
			internalRequest(req, res, httpMethod, options);

		}else{
			console.log('no matchig host : '+ host);
			res.redirect('http://devpage.net');
		}

	} catch (err) {
	    console.log('gateway() error!!!');
		console.log(err);
		res.redirect('http://devpage.net');	
	}
}

function internalRequest(req, res, httpMethod, options){
    console.log("[internalRequest()]");
    
    var requestUri = 'http://' + options.host + ':' + options.port + options.path;
    console.log("\t"+"requestUri : "+requestUri);
    
    if(httpMethod == "GET"){
        request.get(
            requestUri, 
            function (error, response, body){
                if(error){
        	        console.log("\t"+"request.get error!");
        	        console.log(error);
        	        res.send('internalRequest Error', 500);
        	    }else{
            	    try{
            	        console.log("\t"+"response.statusCode:"+response.statusCode);
            	        res.statusCode = response.statusCode;
            	        res.send(body);
            	    }catch(exception){
            	       console.log("\t"+"response.statusCode read exception :"+httpMethod);
            	       console.log(exception);
            	       res.send('internalRequest Error', 500);
            	    }
        	    }
            }
        ); 
        
    }else if(httpMethod == "POST"){
        // blog post는 gateway에서 인증 확인 필요
        
        console.log( "\t -------------------" );
        console.log('\t req.body:');
        console.log(req.body);
        console.log( "\t -------------------" );
        
        request.post(  
        	{ 
        		uri: requestUri,
        		form : req.body,
        		'content-type': req.get('content-type')
        	},   
        	function (error, response, body) {
        	    if(error){
        	        console.log("\t"+"request.post error!");
        	        console.log(error);
        	        res.send('internalRequest Error', 500);
        	    }else{
            	    try{
            	       console.log("\t"+"response.statusCode:"+response.statusCode);
            	       res.statusCode = response.statusCode;
            	       res.send(body);
            	    }catch(exception){
            	       console.log("\t"+"response.statusCode read exception :"+httpMethod);
            	       console.log(exception);
            	       res.send('internalRequest Error', 500);
            	    }
        	    }
        	}
        ); 

    }    
}

app.listen('7000');